homicides <- csv_to_disk.frame(file , outdir = file.path(tempdir(), name))
list(name = name, homicides = homicides)
})
View(homicide_list)
homicide1 <- homicide_list[1]$homicides
homicides_per_year <- homicides1%>%
group_by(yy_hecho) %>%
summarise(n=n()) %>%
collect()
homicides_per_year <- homicide1%>%
group_by(yy_hecho) %>%
summarise(n=n()) %>%
collect()
homicides_per_year <- homicide1%>%
group_by(yy_hecho) %>%
summarise(n=n()) %>%
collect()
homicide1 <- homicide_list[[1]]$homicides
homicides_per_year <- homicide1%>%
group_by(yy_hecho) %>%
summarise(n=n()) %>%
collect()
View(homicides_per_year)
View(homicides_per_year)
ggplot(homicides_per_year, aes(x = yy_hecho, y = n)) +
geom_line(color = "blue") +
geom_point(color = "red") +
labs(title = "Tendencia de Homicidios por Año",
x = "Año",
y = "Número de Homicidios") +
theme_minimal() +
scale_y_continuous(limits = c(0, max(homicides_per_year$n) + 1000), breaks = seq(0, max(homicides_per_year$n) + 1000, by = 1000)) +
scale_x_continuous(breaks = seq(min(homicides_per_year$yy_hecho), max(homicides_per_year$yy_hecho), by = 1))
homicide1 <- homicide_list[[31]]$homicides
homicide1 <- homicide_list[[31]]$homicides
homicides_per_year <- homicide1%>%
group_by(yy_hecho) %>%
summarise(n=n()) %>%
collect()
View(homicides_per_year)
ggplot(homicides_per_year, aes(x = yy_hecho , y = n))
ggplot(homicides_per_year, aes(x = yy_hecho, y = n)) +
geom_line(color = "blue") +
geom_point(color = "red") +
labs(title = "Tendencia de Homicidios por Año",
x = "Año",
y = "Número de Homicidios") +
theme_minimal() +
scale_y_continuous(limits = c(0, max(homicides_per_year$n) + 1000), breaks = seq(0, max(homicides_per_year$n) + 1000, by = 1000)) +
scale_x_continuous(breaks = seq(min(homicides_per_year$yy_hecho), max(homicides_per_year$yy_hecho), by = 1))
homicide1 <- homicide_list[[100]]$homicides
homicides_per_year <- homicide1%>%
group_by(yy_hecho) %>%
summarise(n=n()) %>%
collect()
View(homicides_per_year)
homicide1 <- homicide_list[[15]]$homicides
homicides_per_year <- homicide1%>%
group_by(yy_hecho) %>%
summarise(n=n()) %>%
collect()
View(homicides_per_year)
homicide2 <- homicide_list[[15]]$homicides
homicides_per_year2 <- homicide2%>%
group_by(yy_hecho) %>%
summarise(n=n()) %>%
collect()
View(homicides_per_year2)
homicide2 <- homicide_list[[55]]$homicides
homicides_per_year2 <- homicide2%>%
group_by(yy_hecho) %>%
summarise(n=n()) %>%
collect()
View(homicides_per_year2)
homicide2 <- homicide_list[[55]]$homicides
homicide1df <- homicide2 %>% collect
View(homicide1df)
#aplicando las funciones de dplyr
homicides_per_year2 <- homicide2%>%
group_by(yy_hecho) %>%
summarise(n=n()) %>%
collect()
View(homicides_per_year2)
homicide1 <- homicide_list[[15]]$homicides
homicide1df <- homicide1 %>% collect
View(homicide1df)
#aplicando las funciones de dplyr
homicides_per_year <- homicide1%>%
group_by(yy_hecho) %>%
summarise(n=n()) %>%
collect()
View(homicides_per_year)
homicide2 <- homicide_list[[55]]$homicides
homicide2df <- homicide2 %>% collect
View(homicide1df)
homicide2 <- homicide_list[[55]]$homicides
homicide2df <- homicide2 %>% collect
View(homicide2df)
View(homicides_per_year2)
View(homicides_per_year2)
View(homicide1)
#probando como funcionan los data frames
homicide1 <- homicide_list[[15]]$homicides
homicide1df <- homicide1 %>% collect
View(homicide1df)
#aplicando las funciones de dplyr
homicides_per_year <- homicide1%>%
group_by(yy_hecho) %>%
summarise(n=n()) %>%
collect()
View(homicides_per_year)
#probando como funcionan los data frames
homicide1 <- homicide_list[[15]]$homicides
homicide1df <- homicide1 %>% collect
View(homicide1df)
#aplicando las funciones de dplyr
homicides_per_year <- homicide1%>%
group_by(yy_hecho) %>%
summarise(n=n()) %>%
collect()
library(readr)
read.csv(choose.files("../verdata-homicidio-R8.csv"))
library(readr)
h <-read.csv(choose.files("../verdata-homicidio-R8.csv"))
h <-read.csv(choose.files("../verdata-homicidio-R8.csv"))
view(h)
view(h)
View(homicide2)
View(homicide2)
rm(homicide2df)
rm(homicide1df)
rm(homicide2)
rm(h)
rm(homicides_per_year2)
homicides_per_year <- homicide1%>%
group_by(yy_hecho) %>%
summarise(n=n()) %>%
collect()
View(homicides_per_year)
ggplot(homicides_per_year, aes(x = yy_hecho, y = n)) +
geom_line(color = "blue") +
geom_point(color = "red") +
labs(title = "Tendencia de Homicidios por Año",
x = "Año",
y = "Número de Homicidios") +
theme_minimal() +
scale_y_continuous(limits = c(0, max(homicides_per_year$n) + 1000), breaks = seq(0, max(homicides_per_year$n) + 1000, by = 1000)) +
scale_x_continuous(breaks = seq(min(homicides_per_year$yy_hecho), max(homicides_per_year$yy_hecho), by = 1))
ggplot(homicides_per_year, aes(x = yy_hecho, y = n)) +
geom_line(color = "blue") +
geom_point(color = "red") +
labs(title = "Tendencia de Homicidios por Año",
x = "Año",
y = "Número de Homicidios") +
theme_minimal() +
scale_y_continuous(limits = c(0, max(homicides_per_year$n) + 1000), breaks = seq(0, max(homicides_per_year$n) + 1000, by = 1000)) +
scale_x_continuous(breaks = seq(min(homicides_per_year$yy_hecho), max(homicides_per_year$yy_hecho), by = 1))
ggplot(homicides_per_year, aes(x = yy_hecho, y = n)) +
geom_line(color = "blue") +
geom_point(color = "red") +
labs(title = "Tendencia de Homicidios por Año",
x = "Año",
y = "Número de Homicidios") +
theme_minimal() +
scale_y_continuous(limits = c(0, max(homicides_per_year$n) + 1000), breaks = seq(0, max(homicides_per_year$n) + 1000, by = 1000)) +
scale_x_continuous(breaks = seq(min(homicides_per_year$yy_hecho), max(homicides_per_year$yy_hecho), by = 1))
install.packages("purrr")
install.packages("dplyr")
install.packages(purrr)
install.packages("purrr")
library(purrr)
accumulative_homicide <- function(diskframe){
diskframe %>%
group_by(yy_hecho) %>%
summarise(n = n()) %>%
collect()
}
accumulative_list <- lapply(homicide_list, accumulative_homicide)
accumulative_homicide <- function(diskframe){
diskframe %>%
group_by(yy_hecho) %>%
summarise(n = n()) %>%
collect
}
accumulative_list <- lapply(homicide_list, accumulative_homicide)
accumulative_homicide <- function(diskframe){
diskframe %>%
group_by(yy_hecho) %>%
summarise(n = n()) %>%
collect()
}
accumulative_list <- lapply(homicide_list, accumulative_homicide)
library(readr)
library(ggplot2)
library(disk.frame)
library(dplyr)
library(purrr)
accumulative_homicide <- function(diskframe){
diskframe %>%
group_by(yy_hecho) %>%
summarise(n = n()) %>%
collect()
}
accumulative_list <- lapply(homicide_list, accumulative_homicide)
accumulative_homicide <- function(diskframe){
diskframe %>%
group_by(yy_hecho) %>%
summarise(n = n()) %>%
collect()
}
accumulative_list <- lapply(homicide_list, accumulative_homicide)
accumulative_homicide <- function(diskframe){
diskframe %>%
group_by(yy_hecho) %>%
summarise(n = n()) %>%
collect()
}
accumulative_list <- lapply(homicide_list, accumulative_homicide)
accumulative_homicide <- function(diskframe){
diskframe %>%
group_by(yy_hecho) %>%
summarise(n = n()) %>%
}
accumulative_homicide <- function(diskframe){
diskframe %>%
group_by(yy_hecho) %>%
summarise(n = n())
}
accumulative_list <- lapply(homicide_list,function(df){
collect(accumulative_homicide(df))
})
accumulative_homicide <- function(diskframe){
diskframe %>%
group_by(yy_hecho) %>%
summarise(n = n())
}
accumulative_list <- lapply(homicide_list, function(df) {
accumulative_homicide(df) %>%
collect()
})
accumulative_homicide <- function(diskframe) {
diskframe %>%
group_by(yy_hecho) %>%
summarise(n = n())
}
# Aplicar la función a cada disk.frame y recopilar resultados
total_counts_per_year <- homicide_list %>%
map(accumulative_homicide) %>%
bind_rows() %>%
collect()
accumulative_homicide <- function(diskframe){
diskframe %>%
group_by(yy_hecho) %>%
summarise(n = n())
}
accumulative_list <- list()
# Aplicar la función a cada disk.frame y acumular resultados
for (df in homicide_list) {
accumulative_list[[length(accumulative_list) + 1]] <- accumulative_homicide(df) %>%
collect()
}
accumulative_homicide <- function(diskframe){
diskframe %>%
group_by(yy_hecho) %>%
summarise(n = n()) %>%
}
accumulative_homicide <- function(diskframe){
diskframe %>%
group_by(yy_hecho) %>%
summarise(n = n()) %>%
collect()
}
accumulative_list <- lapply(homicide_list, accumulative_homicide)
accumulative_homicide <- function(diskframe){
diskframe %>%
group_by(yy_hecho) %>%
summarise(n = n()) %>%
collect()
}
accumulative_list <- lapply(homicide_list$homicides, accumulative_homicide)
total_counts_per_year <- reduce(accumulative_list, full_join, by="yy_hecho") %>%
group_by(yy_hecho) %>%
summarise(total_count = sum(n,na.rm = TRUE))
accumulative_homicide <- function(diskframe){
diskframe %>%
group_by(yy_hecho) %>%
summarise(n = n()) %>%
collect()
}
accumulative_list <- lapply(homicide_list$homicides, accumulative_homicide)
View(accumulative_list)
View(df)
View(df)
View(homicide_list)
View(homicide_list)
accumulative_homicide <- function(diskframe){
diskframe %>%
group_by(yy_hecho) %>%
summarise(n = n()) %>%
collect()
}
accumulative_list <- lapply(homicide_list$homicides, accumulative_homicide)
accumulative_list <- lapply(homicide_list$homicides, accumulative_homicide)
accumulative_list <- lapply(homicide_list$homicides, accumulative_homicide)
accumulative_homicide <- function(diskframe){
diskframe %>%
group_by(yy_hecho) %>%
summarise(n = n())
}
accumulative_list <- lapply(homicide_list$homicides, accumulative_homicide)
accumulative_list <- lapply(homicide_list$homicides, accumulative_homicide)
accumulative_list <- lapply( homicide_list[[]]$homicides, accumulative_homicide)
accumulative_list <- lapply( homicide_list$homicides, accumulative_homicide)
accumulative_list <- lapply( homicide_list$homicides, accumulative_homicide)
accumulative_list <- lapply(homicide_list$value, accumulative_homicide)
accumulative_list <- lapply(homicide_list$value, accumulative_homicide)
accumulative_list <- lapply(homicide_list$value, accumulative_homicide)
for(i in 1:100){
}
accumulative_list <- list()
accumulative_list <- list()
for(i in 1:100){
homicide_variable <- homicide_list[[i]]$homicides
datf_variable <- homicide_variable%>%
group_by(yy_hecho) %>%
summarise(n=n()) %>%
collect()
accumulative_list <- append(accumulative_list,datf_variable)
}
accumulative_list <- list()
for(i in 1:100){
homicide_variable <- homicide_list[[i]]$homicides
datf_variable <- homicide_variable%>%
group_by(yy_hecho) %>%
summarise(n=n()) %>%
collect()
accumulative_list <- append(accumulative_list,datf_variable)
}
homicide1 <- homicide_list[[1]]$homicides
homicide1df <- homicide1 %>% collect
homicide1 <- homicide_list[[1]]$homicides
homicide1df <- homicide1 %>% collect
homicide_route <- "../Homicidio.csv/"
library(readr)
library(ggplot2)
library(disk.frame)
library(dplyr)
library(purrr)
homicide_route <- "../Homicidio.csv/"
#Analizar los nucleos para poder usar disk.frame
setup_disk.frame(workers = parallel::detectCores(logical=FALSE))
#Lista de archivos
files <- list.files(homicide_route, pattern = "*.csv", full.names = TRUE)
homicide_list <- lapply(files , function(file){
name <- basename(file)
#convertir cada archivo en disk.frame
homicides <- csv_to_disk.frame(file , outdir = file.path(tempdir(), name))
list(name = name, homicides = homicides)
})
#probando como funcionan los data frames
homicide1 <- homicide_list[[1]]$homicides
homicides_per_year <- homicide1%>%
group_by(yy_hecho) %>%
summarise(n=n()) %>%
collect()
View(homicides_per_year)
#graficar
ggplot(homicides_per_year, aes(x = yy_hecho, y = n)) +
geom_line(color = "blue") +
geom_point(color = "red") +
labs(title = "Tendencia de Homicidios por Año",
x = "Año",
y = "Número de Homicidios") +
theme_minimal() +
scale_y_continuous(limits = c(0, max(homicides_per_year$n) + 1000), breaks = seq(0, max(homicides_per_year$n) + 1000, by = 1000)) +
scale_x_continuous(breaks = seq(min(homicides_per_year$yy_hecho), max(homicides_per_year$yy_hecho), by = 1))
accumulative_list <- list()
for(i in 1:100){
homicide_variable <- homicide_list[[i]]$homicides
datf_variable <- homicide_variable%>%
group_by(yy_hecho) %>%
summarise(n=n()) %>%
collect()
accumulative_list <- append(accumulative_list,datf_variable)
}
View(accumulative_list)
accumulative_list <- list()
for(i in 1:100){
homicide_variable <- homicide_list[[i]]$homicides
datf_variable <- homicide_variable%>%
group_by(yy_hecho) %>%
summarise(n=n()) %>%
collect()
append(accumulative_list,datf_variable)
}
accumulative_list <- list()
for(i in 1:100){
homicide_variable <- homicide_list[[i]]$homicides
datf_variable <- homicide_variable%>%
group_by(yy_hecho) %>%
summarise(n=n()) %>%
collect()
append(accumulative_list,datf_variable)
}
#para hacer un conteo acumulativo
accumulative_list <- list()
for(i in 1:100){
homicide_variable <- homicide_list[[i]]$homicides
datf_variable <- homicide_variable%>%
group_by(yy_hecho) %>%
summarise(n=n()) %>%
collect()
accumulative_list <- append(accumulative_list,datf_variable)
}
homicides_per_year <- homicide1%>%
group_by(yy_hecho) %>%
summarise(n=n()) %>%
collect()
homicide1 <- homicide_list[[100]]$homicides
homicide1df <- homicide1 %>% collect
ggplot(homicides_per_year, aes(x = yy_hecho, y = n)) +
geom_line(color = "blue") +
geom_point(color = "red") +
labs(title = "Tendencia de Homicidios por Año",
x = "Año",
y = "Número de Homicidios") +
theme_minimal() +
scale_y_continuous(limits = c(0, max(homicides_per_year$n) + 1000), breaks = seq(0, max(homicides_per_year$n) + 1000, by = 1000)) +
scale_x_continuous(breaks = seq(min(homicides_per_year$yy_hecho), max(homicides_per_year$yy_hecho), by = 1))
library(readr)
library(ggplot2)
library(disk.frame)
library(dplyr)
library(purrr)
homicide1 <- homicide_list[[100]]$homicides
homicide1df <- homicide1 %>% collect
homicide1 <- homicide_list[[100]]$homicides
homicide1df <- homicide1 %>% collect
homicide1 <- homicide_list[[100]]$homicides
homicide1df <- homicide1 %>% collect
library(readr)
library(ggplot2)
library(disk.frame)
library(dplyr)
library(purrr)
homicide_route <- "../Homicidio.csv/"
#Analizar los nucleos para poder usar disk.frame
setup_disk.frame(workers = parallel::detectCores(logical=FALSE))
#Lista de archivos
files <- list.files(homicide_route, pattern = "*.csv", full.names = TRUE)
homicide_list <- lapply(files , function(file){
name <- basename(file)
#convertir cada archivo en disk.frame
homicides <- csv_to_disk.frame(file , outdir = file.path(tempdir(), name))
list(name = name, homicides = homicides)
})
library(readr)
library(ggplot2)
library(disk.frame)
library(dplyr)
library(purrr)
homicide_route <- "../Homicidio.csv/"
#Analizar los nucleos para poder usar disk.frame
setup_disk.frame(workers = parallel::detectCores(logical=FALSE))
#Lista de archivos
files <- list.files(homicide_route, pattern = "*.csv", full.names = TRUE)
homicide_list <- lapply(files , function(file){
name <- basename(file)
#convertir cada archivo en disk.frame
homicides <- csv_to_disk.frame(file , outdir = file.path(tempdir(), name))
list(name = name, homicides = homicides)
})
#probando como funcionan los data frames
homicide1 <- homicide_list[[100]]$homicides
homicide1df <- homicide1 %>% collect
View(homicide1df)
#aplicando las funciones de dplyr para un data frame
homicides_per_year <- homicide1%>%
group_by(yy_hecho) %>%
summarise(n=n()) %>%
collect()
View(homicides_per_year)
#para hacer un conteo acumulativo
accumulative_list <- list()
for(i in 1:100){
homicide_variable <- homicide_list[[i]]$homicides
datf_variable <- homicide_variable%>%
group_by(yy_hecho) %>%
summarise(n=n()) %>%
collect()
accumulative_list <- append(accumulative_list,list(datf_variable))
}
View(accumulative_list[[1]])
library(readr)
library(ggplot2)
library(disk.frame)
library(dplyr)
library(purrr)
library(readr)
library(ggplot2)
library(disk.frame)
library(dplyr)
library(purrr)
ggplot(homicides_per_year, aes(x = yy_hecho, y = n)) +
geom_line(color = "blue") +
geom_point(color = "red") +
labs(title = "Tendencia de Homicidios por Año",
x = "Año",
y = "Número de Homicidios") +
theme_minimal() +
scale_y_continuous(limits = c(0, max(homicides_per_year$n) + 1000), breaks = seq(0, max(homicides_per_year$n) + 1000, by = 1000)) +
scale_x_continuous(breaks = seq(min(homicides_per_year$yy_hecho), max(homicides_per_year$yy_hecho), by = 1))
